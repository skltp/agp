apiVersion: apps/v1
kind: Deployment
metadata:
  annotations:
  name: agp
spec:
  replicas: {{ .Values.deployment.replicaCount }}
  revisionHistoryLimit: 3
  selector:
    matchLabels:
      app.kubernetes.io/name: agp
  strategy:
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
    type: RollingUpdate
  template:
    metadata:
      annotations:
      labels:
        app: agp
        app.kubernetes.io/name: agp
        elasticGrokFilter: {{ .Values.deployment.elasticGrokFilter }}
    spec:
      volumes:
        - name: log4j
          configMap:
            name: agp-log4j
        - name: init-repo
          persistentVolumeClaim:
            claimName: agp-initrepo-pvc
        - name: init-config
          configMap:
            name: agp-init-config
        - name: services
      imagePullSecrets:
        - name: regcred
      terminationGracePeriodSeconds: 90
      {{- with .Values.deployment.topologySpreadConstraints }}
      topologySpreadConstraints:
        {{- toYaml . | nindent 8 }}
      {{- end }}

      initContainers:
        - name: agp-init
          image: "{{ .Values.repository }}agp-init:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.deployment.pullPolicy }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000 # inituser
            seccompProfile:
              type: RuntimeDefault
          resources:
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          volumeMounts:
            - name: init-config
              mountPath: /opt/agp/pom.xml
              subPath: pom.xml
            - name: init-config
              mountPath: /opt/agp/.m2/settings.xml
              subPath: settings.xml
            - name: init-repo
              mountPath: /opt/agp/.m2/repository
            - name: services
              mountPath: /opt/agp/services

      containers:
        - name: agp
          image: "{{ .Values.repository }}agp-application:{{ .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.deployment.imagePullPolicy }}
          volumeMounts:
            - name: services
              mountPath: /opt/agp/services
            - name: log4j
              mountPath: /etc/agp
          ports:
            - containerPort: 9001
              name: aggservices
            - containerPort: 8080
              name: status
            - containerPort: 8091
              name: reset-cache
            - containerPort: 8089
              name: actuators
          lifecycle:
            preStop:
              exec:
                command: ["sleep", "10"]
          # Injection of startup, liveness, and/or readiness probes below.
          {{- .Values.probes | toYaml | nindent 10 }}
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 1000
            seccompProfile:
              type: RuntimeDefault
          resources: # Block-templated memory and CPU resources.
            {{- toYaml .Values.deployment.resources | nindent 12 }}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          envFrom:
            {{- range $.Values.environment.variables._default_config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.config_maps }}
            - configMapRef:
                name: {{ . }}
            {{- end }}
            {{- range $.Values.environment.variables.secrets }}
            - secretRef:
                name: {{ . }}
            {{- end }}
